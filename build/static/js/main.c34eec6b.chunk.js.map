{"version":3,"sources":["components/InventoryForm.js","components/EditRecord.js","components/InventoryList.js","components/AddNewInventory.js","components/Error.js","App.js","index.js"],"names":["InventoryForm","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","form","props","record","_createClass","key","value","this","setFieldsValue","name","sku","upc","properties","React","createElement","Form","labelCol","span","layout","Item","label","rules","required","message","Input","pattern","List","fields","_ref","add","remove","Fragment","map","field","index","Space","style","display","marginBottom","align","Object","assign","fieldKey","placeholder","MinusCircleOutlined","onClick","Button","type","block","icon","PlusOutlined","Component","EditRecord","visible","updateRecord","onCancel","_Form$useForm","useForm","_slicedToArray","Modal","title","itemName","onOk","validateFields","then","values","resetFields","itemId","catch","info","console","log","Search","InventoryList","sortedInfo","columns","dataIndex","sorter","a","b","localeCompare","sortOrder","columnKey","order","property","width","defaultValue","searchTableValue","enterButton","onSearch","search","allowClear","clear","CloseCircleOutlined","Table","size","dataSource","filterTable","inventory","rowKey","loading","onChange","handleTableChange","pagination","defaultPageSize","showSizeChanger","expandable","expandedRowRender","notes","AddNewInventory","addRecord","shape","Error","id","class","Link","to","Header","Layout","Sider","Content","App","toggle","setState","collapsed","filters","filteredInfo","filter","o","keys","some","k","String","toLowerCase","includes","deleteRecord","tempInventory","without","editRecord","itemIndex","findIndex","_objectSpread","location","item","lastIndex","addDate","Date","unshift","alert","_this2","fetch","response","json","result","_this3","Router","trigger","collapsible","className","Menu","theme","mode","defaultSelectedKeys","UnorderedListOutlined","padding","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","Switch","Route","path","exact","component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c34eec6b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, Space } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nclass InventoryForm extends React.Component {\n  state = {\n    form: this.props.form,\n    record: this.props.record\n  };\n\n  componentDidMount() {\n    if (this.state.record !== null) {\n      this.state.form.setFieldsValue({\n        name: this.state.record.name,\n        sku: this.state.record.sku,\n        upc: this.state.record.upc,\n        properties: this.state.record.properties\n      });\n    }\n  }\n\n  render() {\n    const { form } = this.state;\n\n    return (\n      <Form\n        form={form}\n        labelCol={{\n          span: 4\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"name\"\n          label=\"Name:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"sku\"\n          label=\"SKU:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"upc\"\n          label=\"UPC:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            },\n            {\n              pattern: /^[0-9]{10,13}$/,\n              message: \"UPC must be 10, 12, or 13 numeric characters.\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.List name=\"properties\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map((field, index) => (\n                <Space\n                  key={field.key}\n                  style={{ display: \"flex\", marginBottom: 8 }}\n                  align=\"baseline\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, \"propertyName\"]}\n                    fieldKey={[field.fieldKey, \"propertyName\"]}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Property name is required.\"\n                      }\n                    ]}\n                  >\n                    <Input placeholder=\"Property Name\" />\n                  </Form.Item>\n                  <Form.Item\n                    {...field}\n                    name={[field.name, \"propertyValue\"]}\n                    fieldKey={[field.fieldKey, \"propertyValue\"]}\n                    rules={[\n                      {\n                        required: true,\n                        message: \"Property value is required.\"\n                      }\n                    ]}\n                  >\n                    <Input placeholder=\"Property Value\" />\n                  </Form.Item>\n                  <MinusCircleOutlined onClick={() => remove(field.name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => add()}\n                  block\n                  icon={<PlusOutlined />}\n                >\n                  Add Property\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n      </Form>\n    );\n  }\n}\n\nexport default InventoryForm;\n","import React from 'react';\nimport { default as InventoryForm } from \"./InventoryForm\";\nimport { Modal, Form } from 'antd';\n\nconst EditRecord = ({ visible, updateRecord, onCancel, record }) => {\n  const [form] = Form.useForm();\n\n  return (\n    <Modal\n      visible={visible}\n      title={record.itemName}\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            updateRecord(record.itemId, values);\n          })\n          .catch((info) => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <InventoryForm form={form} record={record} key={record.itemId} />\n    </Modal>\n  );\n};\n\nexport default EditRecord;","import React from \"react\";\nimport moment from \"moment\";\nimport { default as EditRecord } from \"./EditRecord\";\nimport { Table, Button, Input, Space } from \"antd\";\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  CloseCircleOutlined\n} from \"@ant-design/icons\";\n\nconst { Search } = Input;\n\nclass InventoryList extends React.Component {\n  render() {\n    let { sortedInfo } = this.props;\n    sortedInfo = sortedInfo || {};\n\n    const columns = [\n      // ...other columns\n      {\n        title: \"SKU\",\n        dataIndex: \"sku\",\n        key: \"sku\",\n        sorter: (a, b) => {\n          return a.sku.localeCompare(b.sku);\n        },\n        sortOrder: sortedInfo.columnKey === \"sku\" && sortedInfo.order\n      },\n      {\n        title: \"Property\",\n        dataIndex: \"property\",\n        key: \"property\",\n        sorter: (a, b) => {\n          return a.property.localeCompare(b.property);\n        },\n        sortOrder: sortedInfo.columnKey === \"property\" && sortedInfo.order\n      },\n      // ...other columns\n    ];\n\n    return (\n      <>\n        <div align=\"right\">\n          <Space>\n            <Search\n              style={{ marginBottom: 10, width: 200 }}\n              placeholder=\"Search by...\"\n              defaultValue={this.props.searchTableValue}\n              enterButton\n              onSearch={this.props.search}\n              allowClear=\"true\"\n            />\n            <Button style={{ marginBottom: 10 }} onClick={this.props.clear}>\n              <CloseCircleOutlined />\n              Clear Search\n            </Button>\n          </Space>\n        </div>\n\n        <Table\n          size=\"small\"\n          dataSource={\n            this.props.filterTable == null\n              ? this.props.inventory\n              : this.props.filterTable\n          }\n          rowKey=\"itemId\"\n          columns={columns}\n          loading={this.props.loading}\n          onChange={this.props.handleTableChange}\n          pagination={{ defaultPageSize: 10, showSizeChanger: true }}\n          expandable={{\n            expandedRowRender: (record) => <p>{record.notes}</p>\n          }}\n        />\n\n        <EditRecord\n          visible={this.props.visible}\n          updateRecord={this.props.updateRecord}\n          onCancel={this.props.onCancel}\n          record={this.props.record}\n        />\n      </>\n    );\n  }\n}\n\nexport default InventoryList;\n","import React from \"react\";\nimport { default as InventoryForm } from \"./InventoryForm\";\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst AddNewInventory = ({ addRecord }) => {\n  const [form] = Form.useForm();\n  \n  return (\n    <>\n      <Form\n        labelCol={{\n          span: 4,\n        }}\n        layout=\"vertical\"\n        form={form}\n      >\n        <Form.Item\n          name=\"itemName\"\n          label=\"Item Name:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n      \n      <InventoryForm record='null' form={form} />\n\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        onClick={() => {\n          form\n            .validateFields()\n            .then((values) => {\n              form.resetFields();\n              addRecord(values);\n            })\n            .catch((info) => {\n              console.log('Validate Failed:', info);\n            });\n        }}\n      >\n        Add New Inventory\n      </Button>\n    </>\n  );\n}\n\nexport default AddNewInventory;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Error.css';\n\nconst Error = () => {\n    return (\n        <div id=\"notfound\">\n            <div class=\"notfound\">\n                <div class=\"notfound-404\">\n                    <h1>Oops!</h1>\n                    <h2>404 - The Page can't be found</h2>\n                </div>\n                <Link to=\"/\">Go To Homepage</Link>\n            </div>\n        </div>\n    );\n}\n \nexport default Error;","import React from 'react';\nimport { findIndex, without } from 'lodash';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UnorderedListOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport {\n  InventoryList,\n  AddNewInventory,\n  Error\n} from './components';\n\nconst { Header, Sider, Content } = Layout;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      collapsed: false,\n      inventory: [],\n      loading: true,\n      lastIndex: 0,\n      filteredInfo: null,\n      sortedInfo: null,\n      filterTable: null,\n      searchTableValue: \"\",\n      visible: false,\n      record: []\n    };\n  };\n\n  toggle = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  search = value => {\n    const { inventory } = this.state;\n\n    const filterTable = inventory.filter(o =>\n      Object.keys(o).some(k =>\n        String(o[k])\n          .toLowerCase()\n          .includes(value.toLowerCase())\n      )\n    );\n\n    this.setState({ filterTable, searchTableValue: value });\n  };\n\n  clear = () => {\n    this.setState({ filterTable: null, searchTableValue: null });\n  };\n\n  deleteRecord = record => {\n    let tempInventory = this.state.inventory;\n    tempInventory = without(tempInventory, record);\n\n    this.setState({ inventory: tempInventory });\n  };\n\n  onCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  editRecord = record => {\n    this.setState({ visible: true, record: record });\n  };\n\n  updateRecord = (itemId, values) => {\n    let tempInventory = this.state.inventory;\n    let itemIndex = findIndex(this.state.inventory, {\n      itemId: itemId\n    });\n\n    tempInventory[itemIndex] = {\n      ...tempInventory[itemIndex],\n      location: values.location,\n      notes: values.notes\n    }\n\n    this.setState({ inventory: tempInventory, visible: false, filterTable: null });\n    this.search(this.state.searchTableValue);\n  };\n\n  addRecord = item => {\n    let tempInventory = this.state.inventory;\n    item.itemId = this.state.lastIndex;\n    item.addDate = new Date();\n    tempInventory.unshift(item);\n    this.setState({ inventory: tempInventory, lastIndex: this.state.lastIndex + 1})\n    alert(\"Submitted\")\n  };\n\n  componentDidMount() {\n    fetch('./data-InventoryList.json')\n      .then(response => response.json())\n      .then(result => {\n        const inventory = result.map(item => {\n          item.itemId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        })\n        this.setState({ inventory: inventory, loading: false })\n      })\n  };\n\n  render() {\n    return (\n      <Router>\n        <Layout>\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className=\"logo\">\n              Inventory\n            </div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"inventory-list\" icon={<UnorderedListOutlined />}>\n                <Link to='/'>\n                  Inventory List\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"add-new-inventory\" icon={<PlusOutlined />}>\n                <Link to='/AddNewInventory'>\n                  Add New Inventory\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: this.toggle,\n              })}\n            </Header>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 280,\n              }}\n            >\n              <Switch>\n                <Route path='/' exact component={(props) => (\n                  <InventoryList\n                    {...this.state}\n                    handleTableChange={this.handleTableChange}\n                    search={this.search}\n                    clear={this.clear}\n                    deleteRecord={this.deleteRecord}\n                    editRecord={this.editRecord}\n                    updateRecord={this.updateRecord}\n                    onCancel={this.onCancel}\n                  />\n                )} />\n                <Route path='/AddNewInventory' exact component={(props) => (\n                  <AddNewInventory\n                    addRecord={this.addRecord}\n                  />\n                )} />\n                <Route component={Error} />\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}