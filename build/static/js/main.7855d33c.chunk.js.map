{"version":3,"sources":["components/InventoryForm.js","components/EditRecord.js","components/InventoryList.js","components/AddNewInventory.js","components/Error.js","App.js","index.js"],"names":["InventoryForm","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","form","props","record","_createClass","key","value","this","setFieldsValue","name","sku","upc","propertyName","propertyValue","React","createElement","Form","labelCol","span","layout","Item","label","rules","required","message","Input","pattern","Component","EditRecord","_ref","visible","updateRecord","onCancel","_Form$useForm","useForm","_slicedToArray","Modal","title","itemName","onOk","validateFields","then","values","resetFields","itemId","catch","info","console","log","Search","InventoryList","sortedInfo","columns","dataIndex","sorter","a","b","localeCompare","sortOrder","columnKey","order","render","moment","format","Date","available_on","property_name","property_value","Fragment","Button","ghost","type","shape","icon","EditOutlined","onClick","editRecord","DeleteOutlined","deleteRecord","align","Space","style","marginBottom","width","placeholder","defaultValue","searchTableValue","enterButton","onSearch","search","allowClear","clear","CloseCircleOutlined","Table","size","dataSource","filterTable","inventory","rowKey","loading","onChange","handleTableChange","pagination","defaultPageSize","showSizeChanger","expandable","expandedRowRender","notes","AddNewInventory","addRecord","Error","id","class","Link","to","Header","Layout","Sider","Content","App","toggle","setState","collapsed","filters","filteredInfo","filter","o","Object","keys","some","k","String","toLowerCase","includes","tempInventory","without","itemIndex","findIndex","_objectSpread","location","item","lastIndex","addDate","unshift","alert","_this2","fetch","response","json","result","map","_this3","Router","trigger","collapsible","className","Menu","theme","mode","defaultSelectedKeys","UnorderedListOutlined","PlusOutlined","padding","MenuUnfoldOutlined","MenuFoldOutlined","margin","minHeight","Switch","Route","path","exact","component","assign","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7855d33c.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { Form, Input, Button } from \"antd\";\n\nclass InventoryForm extends React.Component {\n  state = {\n    form: this.props.form,\n    record: this.props.record\n  };\n\n  componentDidMount() {\n    if (this.state.record !== null) {\n      this.state.form.setFieldsValue({\n        name: this.state.record.name,\n        sku: this.state.record.sku,\n        upc: this.state.record.upc,\n        propertyName: this.state.record.propertyName,\n        propertyValue: this.state.record.propertyValue\n      });\n    }\n  }\n\n  render() {\n    const { form } = this.state;\n\n    return (\n      <Form\n        form={form}\n        labelCol={{\n          span: 4\n        }}\n        layout=\"vertical\"\n      >\n        <Form.Item\n          name=\"sku\"\n          label=\"SKU:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"upc\"\n          label=\"UPC:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            },\n            {\n              pattern: /^[0-9]{10,13}$/,\n              message: \"UPC must be 10, 12, or 13 numeric characters.\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"property_name\"\n          label=\"Property Name:\"\n          rules={[\n            {\n              required: true,\n              message: \"Property name is required.\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"property_value\"\n          label=\"Property Value:\"\n          rules={[\n            {\n              required: true,\n              message: \"Property value is required.\"\n            }\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport default InventoryForm;","import React from 'react';\nimport { default as InventoryForm } from \"./InventoryForm\";\nimport { Modal, Form } from 'antd';\n\nconst EditRecord = ({ visible, updateRecord, onCancel, record }) => {\n  const [form] = Form.useForm();\n\n  return (\n    <Modal\n      visible={visible}\n      title={record.itemName}\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            updateRecord(record.itemId, values);\n          })\n          .catch((info) => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <InventoryForm form={form} record={record} key={record.itemId} />\n    </Modal>\n  );\n};\n\nexport default EditRecord;","import React from \"react\";\nimport moment from \"moment\";\nimport { default as EditRecord } from \"./EditRecord\";\nimport { Table, Button, Input, Space } from \"antd\";\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Search } = Input;\n\nclass InventoryList extends React.Component {\n  render() {\n    let { sortedInfo } = this.props;\n    sortedInfo = sortedInfo || {};\n\n    const columns = [\n      {\n        title: \"Item Name\",\n        dataIndex: \"itemName\",\n        key: \"itemName\",\n        sorter: (a, b) => {\n          return a.itemName.localeCompare(b.itemName);\n        },\n        sortOrder: sortedInfo.columnKey === \"itemName\" && sortedInfo.order,\n      },\n      {\n        title: \"UPC\",\n        dataIndex: \"upc\",\n        key: \"upc\",\n        sorter: (a, b) => {\n          return a.upc.localeCompare(b.upc);\n        },\n        sortOrder: sortedInfo.columnKey === \"upc\" && sortedInfo.order,\n      },\n      {\n        title: \"Available On\",\n        dataIndex: \"available_on\",\n        key: \"available_on\",\n        render: (value) => moment(value).format(\"LLL\"),\n        sorter: (a, b) => new Date(a.available_on) - new Date(b.available_on),\n        sortOrder: sortedInfo.columnKey === \"addDate\" && sortedInfo.order,\n      },\n      {\n        title: \"SKU\",\n        dataIndex: \"sku\",\n        key: \"sku\",\n        sorter: (a, b) => {\n          return a.sku.localeCompare(b.sku);\n        },\n        sortOrder: sortedInfo.columnKey === \"sku\" && sortedInfo.order,\n      },\n      {\n        title: \"Property Name\",\n        dataIndex: \"property_name\",\n        key: \"property_name\",\n        sorter: (a, b) => {\n          return a.property_name.localeCompare(b.property_name);\n        },\n        sortOrder: sortedInfo.columnKey === \"property_name\" && sortedInfo.order,\n      },\n   {\n        title: \"Property Value\",\n        dataIndex: \"property_value\",\n        key: \"property_value\",\n        sorter: (a, b) => {\n          return a.property_value.localeCompare(b.property_value);\n        },\n        sortOrder: sortedInfo.columnKey === \"property_value\" && sortedInfo.order,\n      },\n      {\n        key: \"action\",\n        render: (record) => (\n          <>\n            <Button\n              ghost\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<EditOutlined />}\n              onClick={() => this.props.editRecord(record)}\n            />\n            <Button\n              type=\"primary\"\n              shape=\"circle\"\n              icon={<DeleteOutlined />}\n              onClick={() => this.props.deleteRecord(record)}\n            />\n          </>\n        ),\n      },\n    ];\n\n    return (\n      <>\n        <div align=\"right\">\n          <Space>\n            <Search\n              style={{ marginBottom: 10, width: 200 }}\n              placeholder=\"Search by...\"\n              defaultValue={this.props.searchTableValue}\n              enterButton\n              onSearch={this.props.search}\n              allowClear=\"true\"\n            />\n            <Button style={{ marginBottom: 10 }} onClick={this.props.clear}>\n              <CloseCircleOutlined />\n              Clear Search\n            </Button>\n          </Space>\n        </div>\n\n        <Table\n          size=\"small\"\n          dataSource={\n            this.props.filterTable == null\n              ? this.props.inventory\n              : this.props.filterTable\n          }\n          rowKey=\"itemId\"\n          columns={columns}\n          loading={this.props.loading}\n          onChange={this.props.handleTableChange}\n          pagination={{ defaultPageSize: 10, showSizeChanger: true }}\n          expandable={{\n            expandedRowRender: (record) => <p>{record.notes}</p>,\n          }}\n        />\n\n        <EditRecord\n          visible={this.props.visible}\n          updateRecord={this.props.updateRecord}\n          onCancel={this.props.onCancel}\n          record={this.props.record}\n        />\n      </>\n    );\n  }\n}\n\nexport default InventoryList;\n\n\n\n\n","import React from \"react\";\nimport { default as InventoryForm } from \"./InventoryForm\";\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst AddNewInventory = ({ addRecord }) => {\n  const [form] = Form.useForm();\n  \n  return (\n    <>\n      <Form\n        labelCol={{\n          span: 4,\n        }}\n        layout=\"vertical\"\n        form={form}\n      >\n        <Form.Item\n          name=\"itemName\"\n          label=\"Item Name:\"\n          rules={[\n            {\n              required: true,\n              message: \"This information is required.\"\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n      </Form>\n      \n      <InventoryForm record='null' form={form} />\n\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        onClick={() => {\n          form\n            .validateFields()\n            .then((values) => {\n              form.resetFields();\n              addRecord(values);\n            })\n            .catch((info) => {\n              console.log('Validate Failed:', info);\n            });\n        }}\n      >\n        Add New Inventory\n      </Button>\n    </>\n  );\n}\n\nexport default AddNewInventory;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Error.css';\n\nconst Error = () => {\n    return (\n        <div id=\"notfound\">\n            <div class=\"notfound\">\n                <div class=\"notfound-404\">\n                    <h1>Oops!</h1>\n                    <h2>404 - The Page can't be found</h2>\n                </div>\n                <Link to=\"/\">Go To Homepage</Link>\n            </div>\n        </div>\n    );\n}\n \nexport default Error;","import React from 'react';\nimport { findIndex, without } from 'lodash';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UnorderedListOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport {\n  InventoryList,\n  AddNewInventory,\n  Error\n} from './components';\n\nconst { Header, Sider, Content } = Layout;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      collapsed: false,\n      inventory: [],\n      loading: true,\n      lastIndex: 0,\n      filteredInfo: null,\n      sortedInfo: null,\n      filterTable: null,\n      searchTableValue: \"\",\n      visible: false,\n      record: []\n    };\n  };\n\n  toggle = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n\n  search = value => {\n    const { inventory } = this.state;\n\n    const filterTable = inventory.filter(o =>\n      Object.keys(o).some(k =>\n        String(o[k])\n          .toLowerCase()\n          .includes(value.toLowerCase())\n      )\n    );\n\n    this.setState({ filterTable, searchTableValue: value });\n  };\n\n  clear = () => {\n    this.setState({ filterTable: null, searchTableValue: null });\n  };\n\n  deleteRecord = record => {\n    let tempInventory = this.state.inventory;\n    tempInventory = without(tempInventory, record);\n\n    this.setState({ inventory: tempInventory });\n  };\n\n  onCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  editRecord = record => {\n    this.setState({ visible: true, record: record });\n  };\n\n  updateRecord = (itemId, values) => {\n    let tempInventory = this.state.inventory;\n    let itemIndex = findIndex(this.state.inventory, {\n      itemId: itemId\n    });\n\n    tempInventory[itemIndex] = {\n      ...tempInventory[itemIndex],\n      location: values.location,\n      notes: values.notes\n    }\n\n    this.setState({ inventory: tempInventory, visible: false, filterTable: null });\n    this.search(this.state.searchTableValue);\n  };\n\n  addRecord = item => {\n    let tempInventory = this.state.inventory;\n    item.itemId = this.state.lastIndex;\n    item.addDate = new Date();\n    tempInventory.unshift(item);\n    this.setState({ inventory: tempInventory, lastIndex: this.state.lastIndex + 1})\n    alert(\"Submitted\")\n  };\n\n  componentDidMount() {\n    fetch('./data-InventoryList.json')\n      .then(response => response.json())\n      .then(result => {\n        const inventory = result.map(item => {\n          item.itemId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        })\n        this.setState({ inventory: inventory, loading: false })\n      })\n  };\n\n  render() {\n    return (\n      <Router>\n        <Layout>\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n            <div className=\"logo\">\n              Inventory\n            </div>\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"inventory-list\" icon={<UnorderedListOutlined />}>\n                <Link to='/'>\n                  Inventory List\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"add-new-inventory\" icon={<PlusOutlined />}>\n                <Link to='/AddNewInventory'>\n                  Add New Inventory\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                className: 'trigger',\n                onClick: this.toggle,\n              })}\n            </Header>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: '24px 16px',\n                padding: 24,\n                minHeight: 280,\n              }}\n            >\n              <Switch>\n                <Route path='/' exact component={(props) => (\n                  <InventoryList\n                    {...this.state}\n                    handleTableChange={this.handleTableChange}\n                    search={this.search}\n                    clear={this.clear}\n                    deleteRecord={this.deleteRecord}\n                    editRecord={this.editRecord}\n                    updateRecord={this.updateRecord}\n                    onCancel={this.onCancel}\n                  />\n                )} />\n                <Route path='/AddNewInventory' exact component={(props) => (\n                  <AddNewInventory\n                    addRecord={this.addRecord}\n                  />\n                )} />\n                <Route component={Error} />\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}